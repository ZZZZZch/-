Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?




class Solution:
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        lazydic = {}
        for each in s:
            if each in lazydic:
                lazydic[each] += 1
            else:
                lazydic[each] = 1
        
        lazydic2 = {}
        for each in t:
            if each in lazydic2:
                lazydic2[each] += 1
            else:
                lazydic2[each] = 1
        
        flag = True
        if lazydic and lazydic2:        
            for each in lazydic.keys():
                if (each in lazydic2) and (each in lazydic) and (lazydic2[each] == lazydic[each]) and (len(lazydic.keys()) == len(lazydic2.keys())):
                    pass
                else:
                    flag = False
        
        
        return flag
